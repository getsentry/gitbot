name: Deploy
env:
  PROJECT_ID: sentry-dev-tooling

on:
  push:
    branches:
      - master
    paths:
      - "gitbot/*"
      - Dockerfile
      - "requirements.*.txt"
      - .github/workflows/deploy.yml

  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy to production or staging."
        required: true
        default: "staging"

jobs:
  build-deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Metadata
        id: info
        run: |-
          if [ ${{ github.event.inputs.environment }} == 'production' ]; then
            echo "::set-output name=service::sentry-deploy-sync-hook"
            echo "::set-output name=environment::${{ github.event.inputs.environment }}"
            if [ ${{ github.ref }} != "refs/heads/master" ]; then
              >&2 echo "We only allow deployments to production from the master branch."
              exit 1
            fi
          else
            echo "::set-output name=service::sentry-deploy-sync-hook-staging"
            echo "::set-output name=environment::staging"
          fi
          RELEASE=$(./release_version.sh)
          echo "::set-output name=release::${RELEASE}"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true # Set to true to authenticate the Cloud Run action

      # This gives the ability to push to the Google Registry
      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        env:
          RELEASE: ${{ steps.info.outputs.service }}
        run: |-
          docker build --build-arg RELEASE="${RELEASE}" -t us.gcr.io/$PROJECT_ID/sentry-deploy-sync-hook:$GITHUB_SHA .
          docker push us.gcr.io/$PROJECT_ID/sentry-deploy-sync-hook:$GITHUB_SHA

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0.5.0
        with:
          service: ${{ steps.info.outputs.service }}
          image: us.gcr.io/${{ env.PROJECT_ID }}/sentry-deploy-sync-hook:${{ github.sha }}
          region: us-central1

      - name: Sentry Release
        uses: getsentry/action-release@v1.1.5
        # If we want to compare a release from a deployed PR we should report it, otherwise,
        # it would only show up in the Sentry SaaS if an error occurred
        with:
          environment: ${{ steps.info.outputs.environment }}
          version: ${{ steps.info.outputs.release }}
        env:
          SENTRY_ORG: sentry
          SENTRY_PROJECT: gitbot
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
