name: Deploy
env:
  PROJECT_ID: sentry-dev-tooling
  REGION: us-central1

on:
  push:
  # XXX: Temp change so we can use this branch as if it was master
  # branches:
  #   - master
  workflow_dispatch:
    inputs:
      service:
        description: 'GCR service to deploy to.'
        required: true
        default: 'sentry-deploy-sync-hook-staging'

jobs:
  build-deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set service
        id: info
        # XXX: How to check that is one of these values? ['sentry-deploy-sync-hook-staging', 'sentry-deploy-sync-hook']
        run: |-
          echo "::set-output name=service::${{ github.event.inputs.service }} || sentry-deploy-sync-hook-staging"
          # XXX: Change this
          echo "::set-output name=environment::staging"
      
      - name: Env variables
        run: |-
          env | sort
          echo "- sha ${{ github.sha }}!"
          echo "- ref ${{ github.ref }}!"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true  # Set to true to authenticate the Cloud Run action

      # This gives the ability to push to the Google Registry
      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t us.gcr.io/$PROJECT_ID/sentry-deploy-sync-hook:$GITHUB_SHA .
          docker push us.gcr.io/$PROJECT_ID/sentry-deploy-sync-hook:$GITHUB_SHA

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0.5.0
        with:
          service: ${{ steps.info.outputs.service }}
          image: us.gcr.io/${{ env.PROJECT_ID }}/sentry-deploy-sync-hook:${{ github.sha }}
          region: ${{ env.REGION }}

      # - name: Sentry Release
      #   uses: getsentry/action-release@v1.1.5
      #   with:
      #     environment: ${{ steps.info.outputs.environment }}
      #   env:
      #     SENTRY_ORG: sentry
      #     SENTRY_PROJECT: sentry-deploy-sync-hook
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
